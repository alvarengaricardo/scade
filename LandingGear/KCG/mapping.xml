<?xml version="1.0" encoding="ISO-8859-1"?>
<!--$********** SCADE Suite KCG 32-bit 6.6 (build i19) ***********
** Command: kcg66.exe -config D:/gd/ITA/CE-235/zzz/kz/LandingGear/KCG/config.txt
** Generation date: 2018-10-08T22:10:52
*************************************************************$-->
<mapping>
  <config>
    <option name="use_types" value="#off#"/>
    <option name="imported_root_package" value="#off#"/>
    <option name="root_package" value="#off#"/>
    <option name="xml_basename" value="kcg_xml_filter_out.scade"/>
    <option name="state_vector" value="#off#"/>
    <option name="static" value="#off#"/>
    <option name="separate_io_all" value="#off#"/>
    <option name="no_separate_io" value="#off#"/>
    <option name="separate_io" value="#off#"/>
    <option name="warn_error" value="#off#"/>
    <option name="short_circuit" value="#off#"/>
    <option name="wrap_c_ops" value="#off#"/>
    <option name="input_file" value="D:/gd/ITA/CE-235/zzz/kz/LandingGear/KCG/scade_model_without_unused.scade"/>
    <option name="probes" value="#off#"/>
    <option name="debug" value="#off#"/>
    <option name="no_observe" value="#off#"/>
    <option name="observe" value="#off#"/>
    <option name="user_config" value="./user_macros.h"/>
    <option name="input_threshold" value="2"/>
    <option name="header" value="#off#"/>
    <option name="significance_length" value="31"/>
    <option name="name_length" value="200"/>
    <option name="globals_prefix" value="#off#"/>
    <option name="keep_asserts" value="#off#"/>
    <option name="global_root_context" value="#off#"/>
    <option name="noexp" value="#off#"/>
    <option name="exp" value="#off#"/>
    <option name="expall" value="#on#"/>
    <option name="target_dir" value="D:/gd/ITA/CE-235/zzz/kz/LandingGear/KCG"/>
    <option name="target" value="C"/>
    <option name="root" value="LandingGear"/>
    <option name="auth" value="#off#"/>
  </config>
  <model>
    <array id="1" baseType="3" size="5"/>
    <predefType id="2" name="bool"/>
    <predefType id="3" name="char"/>
    <predefType id="4" name="int8"/>
    <predefType id="5" name="int16"/>
    <predefType id="6" name="int32"/>
    <predefType id="7" name="int64"/>
    <predefType id="8" name="uint8"/>
    <predefType id="9" name="uint16"/>
    <predefType id="10" name="uint32"/>
    <predefType id="11" name="uint64"/>
    <predefType id="12" name="float32"/>
    <predefType id="13" name="float64"/>
    <predefType id="14" name="size"/>
    <constant id="15" name="LG_DOWN_TEXT" imported="false" type="24"/>
    <constant id="16" name="STR_SIZE" imported="false" type="9"/>
    <constant id="17" name="LG_UP_TEXT" imported="false" type="24"/>
    <constant id="18" name="LG_BTN_NORM_TEXT" imported="false" type="24"/>
    <constant id="19" name="LG_BTN_FAIL_TEXT" imported="false" type="24"/>
    <constant id="20" name="WHITE" imported="false" type="8"/>
    <constant id="21" name="AMBAR" imported="false" type="8"/>
    <constant id="22" name="RED" imported="false" type="8"/>
    <constant id="23" name="LG_EMPTY_TEXT" imported="false" type="24"/>
    <type id="24" name="T_String" imported="false" type="1"/>
    <operator id="25" name="LandingGear" imported="false" root="true" expanded="false">
      <input id="26" name="LG_UpBtn" clock="false" type="2"/>
      <input id="27" name="LG_Fail_Btn" clock="false" type="2"/>
      <output id="28" name="LG_UpBtnTextString" clock="false" type="24"/>
      <output id="29" name="LG_FailBtnTextString" clock="false" type="24"/>
      <output id="30" name="Layer1Active" clock="false" type="2"/>
      <output id="31" name="Layer1Visible" clock="false" type="2"/>
      <output id="32" name="NoseSquareBorderColor" clock="false" type="8"/>
      <output id="33" name="LeftSquareBorderColor" clock="false" type="8"/>
      <output id="34" name="RightSquareBorderColor" clock="false" type="8"/>
      <output id="35" name="NoseSquareFillColor" clock="false" type="8"/>
      <output id="36" name="LeftSquareFillColor" clock="false" type="8"/>
      <output id="37" name="RightSquareFillColor" clock="false" type="8"/>
      <output id="38" name="NoseTextColorIndex" clock="false" type="8"/>
      <output id="39" name="LeftTextColorIndex" clock="false" type="8"/>
      <output id="40" name="RightTextColorIndex" clock="false" type="8"/>
      <output id="41" name="NoseTextString" clock="false" type="24"/>
      <output id="42" name="LeftTextString" clock="false" type="24"/>
      <output id="43" name="RightTextString" clock="false" type="24"/>
      <output id="44" name="StringSize" clock="false" type="9"/>
      <output id="45" name="Emit2CDS" clock="false" type="2"/>
      <fby id="46" name="3"/>
      <instance id="47" name="1" op="80" expanded="true">
        <input id="48" name="Input1" clock="false" type="2"/>
        <output id="49" name="Output1" clock="false" type="2"/>
        <fby id="50" name="1"/>
      </instance>
      <instance id="51" name="2" op="80" expanded="true">
        <input id="52" name="Input1" clock="false" type="2"/>
        <output id="53" name="Output1" clock="false" type="2"/>
        <fby id="54" name="1"/>
      </instance>
      <automaton id="55" name="SM1">
        <state id="56" name="DOWN" initial="true" final="false" default="false">
          <block id="57" name="IfBlock2" type="2">
            <branch id="58" name="else"/>
            <branch id="59" name="then"/>
          </block>
          <fork id="60" name="1" kind="strong">
            <transition id="61" dest="62"/>
          </fork>
        </state>
        <state id="62" name="TRANSITION" initial="false" final="false" default="false">
          <fby id="63" name="4"/>
          <block id="64" name="IfBlock1" type="2">
            <branch id="65" name="else"/>
            <branch id="66" name="then"/>
          </block>
          <block id="67" name="IfBlock2" type="2">
            <branch id="68" name="else"/>
            <branch id="69" name="then"/>
          </block>
          <fork id="70" name="1" kind="weak">
            <transition id="71" dest="74"/>
          </fork>
          <fork id="72" name="2" kind="weak">
            <transition id="73" dest="56"/>
          </fork>
        </state>
        <state id="74" name="UP" initial="false" final="false" default="false">
          <block id="75" name="IfBlock2" type="2">
            <branch id="76" name="else"/>
            <branch id="77" name="then"/>
          </block>
          <fork id="78" name="1" kind="strong">
            <transition id="79" dest="62"/>
          </fork>
        </state>
      </automaton>
    </operator>
    <operator id="80" name="Switch" imported="false" root="false" expanded="true"/>
  </model>
  <generated>
    <c>
      <file id="81" name="LandingGear.h">
        <function id="82" name="LandingGear_init">
          <parameter id="83" name="outC" type="89" pointer="true"/>
        </function>
        <function id="84" name="LandingGear_reset">
          <parameter id="85" name="outC" type="89" pointer="true"/>
        </function>
        <function id="86" name="LandingGear">
          <parameter id="87" name="inC" type="114" pointer="true"/>
          <parameter id="88" name="outC" type="89" pointer="true"/>
        </function>
        <struct id="89" name="outC_LandingGear">
          <field id="90" name="LG_UpBtnTextString" type="123" pointer="false"/>
          <field id="91" name="LG_FailBtnTextString" type="123" pointer="false"/>
          <field id="92" name="Layer1Active" type="168" pointer="false"/>
          <field id="93" name="Layer1Visible" type="168" pointer="false"/>
          <field id="94" name="NoseSquareBorderColor" type="161" pointer="false"/>
          <field id="95" name="LeftSquareBorderColor" type="161" pointer="false"/>
          <field id="96" name="RightSquareBorderColor" type="161" pointer="false"/>
          <field id="97" name="NoseSquareFillColor" type="161" pointer="false"/>
          <field id="98" name="LeftSquareFillColor" type="161" pointer="false"/>
          <field id="99" name="RightSquareFillColor" type="161" pointer="false"/>
          <field id="100" name="NoseTextColorIndex" type="161" pointer="false"/>
          <field id="101" name="LeftTextColorIndex" type="161" pointer="false"/>
          <field id="102" name="RightTextColorIndex" type="161" pointer="false"/>
          <field id="103" name="NoseTextString" type="123" pointer="false"/>
          <field id="104" name="LeftTextString" type="123" pointer="false"/>
          <field id="105" name="RightTextString" type="123" pointer="false"/>
          <field id="106" name="StringSize" type="162" pointer="false"/>
          <field id="107" name="Emit2CDS" type="168" pointer="false"/>
          <field id="108" name="init" type="168" pointer="false"/>
          <field id="109" name="_L3_Switch_1" type="168" pointer="false"/>
          <field id="110" name="_L3_Switch_2" type="168" pointer="false"/>
          <field id="111" name="_L2_TRANSITION_SM1" type="159" pointer="false"/>
          <field id="112" name="SM1_state_nxt" type="124" pointer="false"/>
          <field id="113" name="_L12" type="168" pointer="false"/>
        </struct>
        <struct id="114" name="inC_LandingGear">
          <field id="115" name="LG_UpBtn" type="168" pointer="false"/>
          <field id="116" name="LG_Fail_Btn" type="168" pointer="false"/>
        </struct>
      </file>
      <file id="117" name="kcg_types.h">
        <ifdef id="118" name="kcg_use_T_String">
          <function id="119" name="kcg_comp_T_String" returnType="168">
            <parameter id="120" name="kcg_c1" type="123" pointer="true"/>
            <parameter id="121" name="kcg_c2" type="123" pointer="true"/>
          </function>
        </ifdef>
        <macro id="122" name="kcg_copy_T_String"/>
        <array id="123" name="T_String" baseType="169" size="5"/>
        <enum id="124" name="SSM_ST_SM1" tagName="kcg_tag_SSM_ST_SM1">
          <value id="125" name="SSM_st_DOWN_SM1"/>
          <value id="126" name="SSM_st_TRANSITION_SM1"/>
          <value id="127" name="SSM_st_UP_SM1"/>
        </enum>
        <enum id="128" name="SSM_TR_SM1" tagName="kcg_tag_SSM_TR_SM1">
          <value id="129" name="SSM_TR_no_trans_SM1"/>
          <value id="130" name="SSM_TR_DOWN_TRANSITION_1_DOWN_SM1"/>
          <value id="131" name="SSM_TR_TRANSITION_UP_1_TRANSITION_SM1"/>
          <value id="132" name="SSM_TR_TRANSITION_DOWN_2_TRANSITION_SM1"/>
          <value id="133" name="SSM_TR_UP_TRANSITION_1_UP_SM1"/>
        </enum>
        <macro id="134" name="kcg_assign_array"/>
        <macro id="135" name="kcg_assign_struct"/>
        <macro id="136" name="kcg_lnot_uint8"/>
        <macro id="137" name="kcg_lnot_uint16"/>
        <macro id="138" name="kcg_lnot_uint32"/>
        <macro id="139" name="kcg_lnot_uint64"/>
        <macro id="140" name="kcg_lsl_uint8"/>
        <macro id="141" name="kcg_lsl_uint16"/>
        <macro id="142" name="kcg_lsl_uint32"/>
        <macro id="143" name="kcg_lsl_uint64"/>
        <macro id="144" name="kcg_true"/>
        <macro id="145" name="kcg_false"/>
        <macro id="146" name="kcg_lit_int8"/>
        <macro id="147" name="kcg_lit_int16"/>
        <macro id="148" name="kcg_lit_int32"/>
        <macro id="149" name="kcg_lit_int64"/>
        <macro id="150" name="kcg_lit_uint8"/>
        <macro id="151" name="kcg_lit_uint16"/>
        <macro id="152" name="kcg_lit_uint32"/>
        <macro id="153" name="kcg_lit_uint64"/>
        <macro id="154" name="kcg_lit_size"/>
        <macro id="155" name="kcg_lit_float64"/>
        <macro id="156" name="kcg_lit_float32"/>
        <predefType id="157" name="kcg_int8"/>
        <predefType id="158" name="kcg_int16"/>
        <predefType id="159" name="kcg_int32"/>
        <predefType id="160" name="kcg_int64"/>
        <predefType id="161" name="kcg_uint8"/>
        <predefType id="162" name="kcg_uint16"/>
        <predefType id="163" name="kcg_uint32"/>
        <predefType id="164" name="kcg_uint64"/>
        <predefType id="165" name="kcg_size"/>
        <predefType id="166" name="kcg_float64"/>
        <predefType id="167" name="kcg_float32"/>
        <predefType id="168" name="kcg_bool"/>
        <predefType id="169" name="kcg_char"/>
        <macro id="170" name="KCG_MAPW_CPY"/>
      </file>
      <file id="171" name="kcg_consts.h">
        <macro id="172" name="STR_SIZE" type="162"/>
        <constant id="173" name="LG_DOWN_TEXT" type="123" pointer="false"/>
        <constant id="174" name="LG_UP_TEXT" type="123" pointer="false"/>
        <constant id="175" name="LG_BTN_NORM_TEXT" type="123" pointer="false"/>
        <constant id="176" name="LG_BTN_FAIL_TEXT" type="123" pointer="false"/>
        <macro id="177" name="WHITE" type="161"/>
        <macro id="178" name="AMBAR" type="161"/>
        <macro id="179" name="RED" type="161"/>
        <constant id="180" name="LG_EMPTY_TEXT" type="123" pointer="false"/>
      </file>
      <file id="181" name="kcg_sensors.h"/>
    </c>
    <map srcId="166" dstId="155" role="wrapped-lit"/>
    <map srcId="167" dstId="156" role="wrapped-lit"/>
    <map srcId="165" dstId="154" role="wrapped-lit"/>
    <map srcId="164" dstId="153" role="wrapped-lit"/>
    <map srcId="164" dstId="139" role="wrapped-lnot"/>
    <map srcId="164" dstId="143" role="wrapped-lsl"/>
    <map srcId="163" dstId="152" role="wrapped-lit"/>
    <map srcId="163" dstId="138" role="wrapped-lnot"/>
    <map srcId="163" dstId="142" role="wrapped-lsl"/>
    <map srcId="162" dstId="151" role="wrapped-lit"/>
    <map srcId="162" dstId="137" role="wrapped-lnot"/>
    <map srcId="162" dstId="141" role="wrapped-lsl"/>
    <map srcId="161" dstId="150" role="wrapped-lit"/>
    <map srcId="161" dstId="136" role="wrapped-lnot"/>
    <map srcId="161" dstId="140" role="wrapped-lsl"/>
    <map srcId="160" dstId="149" role="wrapped-lit"/>
    <map srcId="159" dstId="148" role="wrapped-lit"/>
    <map srcId="158" dstId="147" role="wrapped-lit"/>
    <map srcId="157" dstId="146" role="wrapped-lit"/>
    <map srcId="123" dstId="118" role="type-use"/>
    <map srcId="123" dstId="119" role="type-comparison"/>
    <map srcId="123" dstId="122" role="type-copy"/>
  </generated>
  <map modelId="73" generatedId="132"/>
  <map modelId="71" generatedId="131"/>
  <map modelId="56" generatedId="125"/>
  <map modelId="61" generatedId="130"/>
  <map modelId="55" generatedId="129" role="autom-no-trans-enum"/>
  <map modelId="74" generatedId="127"/>
  <map modelId="79" generatedId="133"/>
  <map modelId="62" generatedId="126"/>
  <map modelId="25" generatedId="83" role="context-parameter"/>
  <map modelId="25" generatedId="82" role="init-method"/>
  <map modelId="25" generatedId="85" role="context-parameter"/>
  <map modelId="25" generatedId="84" role="reset-method"/>
  <map modelId="25" generatedId="87" role="input-struct-parameter"/>
  <map modelId="27" generatedId="116"/>
  <map modelId="52" generatedId="116"/>
  <map modelId="26" generatedId="115"/>
  <map modelId="48" generatedId="115"/>
  <map modelId="25" generatedId="114" role="input-struct-type"/>
  <map modelId="25" generatedId="88" role="context-parameter"/>
  <map modelId="46" generatedId="113" role="memory"/>
  <map modelId="55" generatedId="112" role="autom-next-state"/>
  <map modelId="63" generatedId="111" role="memory"/>
  <map modelId="54" generatedId="110" role="memory"/>
  <map modelId="50" generatedId="109" role="memory"/>
  <map modelId="63" generatedId="108" role="init"/>
  <map modelId="45" generatedId="107"/>
  <map modelId="44" generatedId="106"/>
  <map modelId="43" generatedId="105"/>
  <map modelId="42" generatedId="104"/>
  <map modelId="41" generatedId="103"/>
  <map modelId="40" generatedId="102"/>
  <map modelId="39" generatedId="101"/>
  <map modelId="38" generatedId="100"/>
  <map modelId="37" generatedId="99"/>
  <map modelId="36" generatedId="98"/>
  <map modelId="35" generatedId="97"/>
  <map modelId="34" generatedId="96"/>
  <map modelId="33" generatedId="95"/>
  <map modelId="32" generatedId="94"/>
  <map modelId="31" generatedId="93"/>
  <map modelId="30" generatedId="92"/>
  <map modelId="29" generatedId="91"/>
  <map modelId="28" generatedId="90"/>
  <map modelId="25" generatedId="89" role="context-type"/>
  <map modelId="25" generatedId="81" role="interface-file"/>
  <map modelId="25" generatedId="86" role="cycle-method"/>
  <map modelId="23" generatedId="180"/>
  <map modelId="22" generatedId="179"/>
  <map modelId="21" generatedId="178"/>
  <map modelId="20" generatedId="177"/>
  <map modelId="19" generatedId="176"/>
  <map modelId="18" generatedId="175"/>
  <map modelId="17" generatedId="174"/>
  <map modelId="15" generatedId="173"/>
  <map modelId="16" generatedId="172"/>
  <map modelId="55" generatedId="128" role="autom-transitions-type"/>
  <map modelId="55" generatedId="124" role="autom-states-type"/>
  <map modelId="24" generatedId="123"/>
  <map modelId="1" generatedId="123"/>
  <map modelId="3" generatedId="169"/>
  <map modelId="2" generatedId="168"/>
  <map modelId="13" generatedId="166"/>
  <map modelId="12" generatedId="167"/>
  <map modelId="14" generatedId="165"/>
  <map modelId="11" generatedId="164"/>
  <map modelId="10" generatedId="163"/>
  <map modelId="9" generatedId="162"/>
  <map modelId="8" generatedId="161"/>
  <map modelId="7" generatedId="160"/>
  <map modelId="6" generatedId="159"/>
  <map modelId="5" generatedId="158"/>
  <map modelId="4" generatedId="157"/>
</mapping>
<!--$********** SCADE Suite KCG 32-bit 6.6 (build i19) ***********
** mapping.xml
** Generation date: 2018-10-08T22:10:52
*************************************************************$-->